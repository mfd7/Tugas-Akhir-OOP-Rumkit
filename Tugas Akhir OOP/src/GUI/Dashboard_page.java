/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Model.Dokter;
import Model.Kamar;
import Model.Pasien;
import controller.ConnectionManager;
import controller.DokterTableModel;
import controller.IgdTableModel;
import controller.KamarTableModel;
import controller.PasienTableModel;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author user
 */
public class Dashboard_page extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard_page
     */
    CardLayout cardLayout;
    public Dashboard_page() {
        initComponents();
        
        cardLayout = (CardLayout)(card_panel.getLayout());
        
        this.setLocationRelativeTo(null);
        
        btn_pasien.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btn_igd.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btn_kamar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btn_dokter.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btn_reg.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnSimpan.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnExit.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        setColor(btn_pasien); 
        ind_pasien.setOpaque(true);
        resetColor(new JPanel[]{btn_igd,btn_kamar}, new JPanel[]{ind_igd,ind_kamar});
       
        tableQuery();
        igdQuery();
        kamarQuery();
        dokterQuery();
        fillCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_pasien = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ind_pasien = new javax.swing.JPanel();
        btn_igd = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ind_igd = new javax.swing.JPanel();
        btn_kamar = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ind_kamar = new javax.swing.JPanel();
        btn_dokter = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        ind_dokter = new javax.swing.JPanel();
        btn_reg = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        ind_reg = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnExit = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        card_panel = new javax.swing.JPanel();
        pasienPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pasienTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        text_caripasien = new javax.swing.JTextField();
        lbl_totalpasien = new javax.swing.JLabel();
        igdPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        igdTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        text_cariigd = new javax.swing.JTextField();
        lbl_totalpasien1 = new javax.swing.JLabel();
        kamarPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        kamarTable = new javax.swing.JTable();
        lbl_totalpasien2 = new javax.swing.JLabel();
        cbUrut = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbKelas = new javax.swing.JComboBox<>();
        dokterPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        dokterTable = new javax.swing.JTable();
        cbSpesialis = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        regPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblKamar = new javax.swing.JLabel();
        txtUmur = new javax.swing.JTextField();
        txtKtp = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtAlamat = new javax.swing.JTextField();
        cbKamar = new javax.swing.JComboBox<>();
        btnSimpan = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        cbSpesialisreg = new javax.swing.JComboBox<>();
        lblSpesialis = new javax.swing.JLabel();
        cbTipe = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        cbDokter = new javax.swing.JComboBox<>();
        lblDokter = new javax.swing.JLabel();
        cbNomor = new javax.swing.JComboBox<>();
        lblNomor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(23, 35, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_pasien.setBackground(new java.awt.Color(23, 35, 51));
        btn_pasien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_pasienMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_pasienMouseEntered(evt);
            }
        });
        btn_pasien.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/patient.png"))); // NOI18N
        jLabel1.setText("  Pasien");
        btn_pasien.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 11, -1, -1));

        ind_pasien.setOpaque(false);

        javax.swing.GroupLayout ind_pasienLayout = new javax.swing.GroupLayout(ind_pasien);
        ind_pasien.setLayout(ind_pasienLayout);
        ind_pasienLayout.setHorizontalGroup(
            ind_pasienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        ind_pasienLayout.setVerticalGroup(
            ind_pasienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        btn_pasien.add(ind_pasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 5, 50));

        jPanel1.add(btn_pasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 140, 50));

        btn_igd.setBackground(new java.awt.Color(23, 35, 51));
        btn_igd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_igdMouseClicked(evt);
            }
        });
        btn_igd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/emergency.png"))); // NOI18N
        jLabel2.setText("  IGD");
        btn_igd.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 11, -1, -1));

        ind_igd.setOpaque(false);

        javax.swing.GroupLayout ind_igdLayout = new javax.swing.GroupLayout(ind_igd);
        ind_igd.setLayout(ind_igdLayout);
        ind_igdLayout.setHorizontalGroup(
            ind_igdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        ind_igdLayout.setVerticalGroup(
            ind_igdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        btn_igd.add(ind_igd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 5, 50));

        jPanel1.add(btn_igd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 140, -1));

        btn_kamar.setBackground(new java.awt.Color(23, 35, 51));
        btn_kamar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_kamarMouseClicked(evt);
            }
        });
        btn_kamar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hospital.png"))); // NOI18N
        jLabel4.setText("  Kamar");
        btn_kamar.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 11, -1, -1));

        ind_kamar.setOpaque(false);

        javax.swing.GroupLayout ind_kamarLayout = new javax.swing.GroupLayout(ind_kamar);
        ind_kamar.setLayout(ind_kamarLayout);
        ind_kamarLayout.setHorizontalGroup(
            ind_kamarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        ind_kamarLayout.setVerticalGroup(
            ind_kamarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        btn_kamar.add(ind_kamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 5, 50));

        jPanel1.add(btn_kamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 140, -1));

        btn_dokter.setBackground(new java.awt.Color(23, 35, 51));
        btn_dokter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_dokterMouseClicked(evt);
            }
        });
        btn_dokter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doctor.png"))); // NOI18N
        jLabel11.setText("  Dokter");
        btn_dokter.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 11, -1, -1));

        ind_dokter.setOpaque(false);

        javax.swing.GroupLayout ind_dokterLayout = new javax.swing.GroupLayout(ind_dokter);
        ind_dokter.setLayout(ind_dokterLayout);
        ind_dokterLayout.setHorizontalGroup(
            ind_dokterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        ind_dokterLayout.setVerticalGroup(
            ind_dokterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        btn_dokter.add(ind_dokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 5, 50));

        jPanel1.add(btn_dokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 140, -1));

        btn_reg.setBackground(new java.awt.Color(23, 35, 51));
        btn_reg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_regMouseClicked(evt);
            }
        });
        btn_reg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/more.png"))); // NOI18N
        jLabel12.setText("  Registrasi");
        btn_reg.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 15, -1, -1));

        ind_reg.setOpaque(false);

        javax.swing.GroupLayout ind_regLayout = new javax.swing.GroupLayout(ind_reg);
        ind_reg.setLayout(ind_regLayout);
        ind_regLayout.setHorizontalGroup(
            ind_regLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        ind_regLayout.setVerticalGroup(
            ind_regLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        btn_reg.add(ind_reg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 5, 50));

        jPanel1.add(btn_reg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 140, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 500));

        jPanel2.setBackground(new java.awt.Color(71, 120, 197));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
        });
        jPanel2.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Rumah Sakit");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 510, 50));

        jPanel5.setBackground(new java.awt.Color(23, 35, 51));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/patient.png"))); // NOI18N
        jLabel3.setText("  Pasien");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 110, 50));

        card_panel.setLayout(new java.awt.CardLayout());

        pasienPanel.setBackground(new java.awt.Color(255, 255, 255));
        pasienPanel.setName("pasienPanel"); // NOI18N
        pasienPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pasienTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pasienTable.setFocusable(false);
        pasienTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        pasienTable.setRowHeight(25);
        pasienTable.setShowVerticalLines(false);
        pasienTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(pasienTable);

        pasienPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 310));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Cari Pasien :");
        pasienPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        text_caripasien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        text_caripasien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_caripasienKeyReleased(evt);
            }
        });
        pasienPanel.add(text_caripasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 240, -1));

        lbl_totalpasien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pasienPanel.add(lbl_totalpasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        card_panel.add(pasienPanel, "pasienPanel");

        igdPanel.setBackground(new java.awt.Color(255, 255, 255));
        igdPanel.setName("igdPanel"); // NOI18N
        igdPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        igdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        igdTable.setFocusable(false);
        igdTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        igdTable.setRowHeight(25);
        igdTable.setShowVerticalLines(false);
        igdTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(igdTable);

        igdPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 310));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Cari Pasien :");
        igdPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        text_cariigd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        text_cariigd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_cariigdKeyReleased(evt);
            }
        });
        igdPanel.add(text_cariigd, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 240, -1));

        lbl_totalpasien1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        igdPanel.add(lbl_totalpasien1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        card_panel.add(igdPanel, "igdPanel");

        kamarPanel.setBackground(new java.awt.Color(255, 255, 255));
        kamarPanel.setName("igdPanel"); // NOI18N
        kamarPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kamarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        kamarTable.setFocusable(false);
        kamarTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        kamarTable.setRowHeight(25);
        kamarTable.setShowVerticalLines(false);
        kamarTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(kamarTable);

        kamarPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 310));

        lbl_totalpasien2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        kamarPanel.add(lbl_totalpasien2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        cbUrut.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbUrut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua", "Tersedia", "Terisi" }));
        cbUrut.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUrutItemStateChanged(evt);
            }
        });
        kamarPanel.add(cbUrut, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 25, 90, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Urutkan :");
        kamarPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Kelas :");
        kamarPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, -1, -1));

        cbKelas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbKelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua" }));
        cbKelas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbKelasItemStateChanged(evt);
            }
        });
        kamarPanel.add(cbKelas, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 25, 120, -1));

        card_panel.add(kamarPanel, "kamarPanel");

        dokterPanel.setBackground(new java.awt.Color(255, 255, 255));
        dokterPanel.setName("igdPanel"); // NOI18N
        dokterPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dokterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dokterTable.setFocusable(false);
        dokterTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        dokterTable.setRowHeight(25);
        dokterTable.setShowVerticalLines(false);
        dokterTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(dokterTable);

        dokterPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 310));

        cbSpesialis.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbSpesialis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua" }));
        cbSpesialis.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSpesialisItemStateChanged(evt);
            }
        });
        dokterPanel.add(cbSpesialis, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 25, 140, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Spesialis :");
        dokterPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        card_panel.add(dokterPanel, "dokterPanel");

        regPanel.setBackground(new java.awt.Color(255, 255, 255));
        regPanel.setName("igdPanel"); // NOI18N
        regPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("KTP");
        regPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, 30));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Nama");
        regPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, 30));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Alamat");
        regPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, 30));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Umur");
        regPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, 30));

        lblKamar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblKamar.setText("Kelas Kamar");
        regPanel.add(lblKamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, -1, 30));

        txtUmur.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        regPanel.add(txtUmur, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 240, -1));

        txtKtp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        regPanel.add(txtKtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 240, -1));

        txtNama.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        regPanel.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 240, -1));

        txtAlamat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        regPanel.add(txtAlamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 240, -1));

        cbKamar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbKamar.setOpaque(false);
        cbKamar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbKamarItemStateChanged(evt);
            }
        });
        regPanel.add(cbKamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 240, -1));

        btnSimpan.setBackground(new java.awt.Color(71, 120, 197));
        btnSimpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSimpanMouseClicked(evt);
            }
        });
        btnSimpan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Simpan");
        btnSimpan.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 30));

        regPanel.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, 100, 30));

        cbSpesialisreg.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbSpesialisreg.setOpaque(false);
        cbSpesialisreg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSpesialisregItemStateChanged(evt);
            }
        });
        regPanel.add(cbSpesialisreg, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 240, -1));

        lblSpesialis.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSpesialis.setText("Spesialis");
        regPanel.add(lblSpesialis, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, 30));

        cbTipe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbTipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inap", "Jalan", "IGD" }));
        cbTipe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipeItemStateChanged(evt);
            }
        });
        regPanel.add(cbTipe, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 240, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Tipe");
        regPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, 30));

        cbDokter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbDokter.setOpaque(false);
        regPanel.add(cbDokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 240, -1));

        lblDokter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDokter.setText("Dokter");
        regPanel.add(lblDokter, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, 30));

        cbNomor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbNomor.setOpaque(false);
        regPanel.add(cbNomor, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 240, -1));

        lblNomor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNomor.setText("Nomor Kamar");
        regPanel.add(lblNomor, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, -1, 30));

        card_panel.add(regPanel, "regPanel");

        getContentPane().add(card_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 510, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_pasienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_pasienMouseEntered
        
    }//GEN-LAST:event_btn_pasienMouseEntered

    private void btn_pasienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_pasienMouseClicked
        setColor(btn_pasien); 
        ind_pasien.setOpaque(true);
        resetColor(new JPanel[]{btn_igd,btn_kamar,btn_dokter,btn_reg},
                new JPanel[]{ind_igd,ind_kamar,ind_dokter,ind_reg});
        
        cardLayout.show(card_panel, "pasienPanel");
        tableQuery();
    }//GEN-LAST:event_btn_pasienMouseClicked

    private void btn_igdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_igdMouseClicked
        setColor(btn_igd); 
        ind_igd.setOpaque(true);
        resetColor(new JPanel[]{btn_pasien,btn_kamar,btn_dokter,btn_reg},
                new JPanel[]{ind_pasien,ind_kamar,ind_dokter,ind_reg});
        
        cardLayout.show(card_panel, "igdPanel");
        igdQuery();
    }//GEN-LAST:event_btn_igdMouseClicked

    private void btn_kamarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_kamarMouseClicked
        setColor(btn_kamar); 
        ind_kamar.setOpaque(true);
        resetColor(new JPanel[]{btn_pasien,btn_igd,btn_dokter,btn_reg},
                new JPanel[]{ind_pasien,ind_igd,ind_dokter,ind_reg});
        
        cardLayout.show(card_panel, "kamarPanel");
        kamarQuery();
    }//GEN-LAST:event_btn_kamarMouseClicked

    private void text_caripasienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_caripasienKeyReleased
        tableSearch();
    }//GEN-LAST:event_text_caripasienKeyReleased

    private void text_cariigdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_cariigdKeyReleased
        igdSearch();
    }//GEN-LAST:event_text_cariigdKeyReleased

    private void cbUrutItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUrutItemStateChanged
        kamarSort();
    }//GEN-LAST:event_cbUrutItemStateChanged

    private void cbKelasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbKelasItemStateChanged
        kamarKelas();
    }//GEN-LAST:event_cbKelasItemStateChanged

    private void btn_dokterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_dokterMouseClicked
        setColor(btn_dokter); 
        ind_dokter.setOpaque(true);
        resetColor(new JPanel[]{btn_pasien,btn_igd,btn_kamar,btn_reg},
                new JPanel[]{ind_pasien,ind_igd,ind_kamar,ind_reg});
        
        cardLayout.show(card_panel, "dokterPanel");
        dokterQuery();
    }//GEN-LAST:event_btn_dokterMouseClicked

    private void btn_regMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regMouseClicked
        setColor(btn_reg); 
        ind_reg.setOpaque(true);
        resetColor(new JPanel[]{btn_pasien,btn_igd,btn_dokter,btn_kamar},
                new JPanel[]{ind_pasien,ind_igd,ind_dokter,ind_kamar});
        
        cardLayout.show(card_panel, "regPanel");
    }//GEN-LAST:event_btn_regMouseClicked

    private void cbSpesialisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSpesialisItemStateChanged
        dokterSort();
    }//GEN-LAST:event_cbSpesialisItemStateChanged

    private void cbTipeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipeItemStateChanged
        if(cbTipe.getSelectedItem() == "Inap"){
            cbKamar.setVisible(true);
            lblKamar.setVisible(true);
            lblNomor.setVisible(true);
            cbNomor.setVisible(true);
            cbDokter.setVisible(true);
            lblDokter.setVisible(true);
            cbSpesialisreg.setVisible(true);
            lblSpesialis.setVisible(true);
        }else if(cbTipe.getSelectedItem() == "Jalan"){
            cbKamar.setVisible(false);
            lblKamar.setVisible(false);
            lblNomor.setVisible(false);
            cbNomor.setVisible(false);
            cbDokter.setVisible(true);
            lblDokter.setVisible(true);
            cbSpesialisreg.setVisible(true);
            lblSpesialis.setVisible(true);
        }else if(cbTipe.getSelectedItem() == "IGD"){
            cbKamar.setVisible(false);
            lblKamar.setVisible(false);
            lblNomor.setVisible(false);
            cbNomor.setVisible(false);
            cbDokter.setVisible(false);
            lblDokter.setVisible(false);
            cbSpesialisreg.setVisible(false);
            lblSpesialis.setVisible(false);
        }
    }//GEN-LAST:event_cbTipeItemStateChanged
int idDokter = 0;
    private void cbSpesialisregItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSpesialisregItemStateChanged
        int id = 0;
        switch(cbSpesialisreg.getSelectedIndex()){
            case 0:
                id = 1;
                break;
            case 1:
                id = 2;
                break;
            case 2:
                id = 3; 
                break;
            case 3:
                id = 4;
                break;
            case 4:
                id = 5; 
                break;
        }
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from dokter where spesialis_id="+id);
            cbDokter.removeAllItems();
            while(rs.next()){
                cbDokter.addItem(rs.getString("dokter_nama"));
                idDokter = rs.getInt("dokter_id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }//GEN-LAST:event_cbSpesialisregItemStateChanged

    private void cbKamarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbKamarItemStateChanged
        int id = 0;
        switch(cbKamar.getSelectedIndex()){
            case 0:
                id = 1;
                break;
            case 1:
                id = 2;
                break;
            case 2:
                id = 3; 
                break;
        }
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from kamar where kelas_id="+id+" and kamar_ketersediaan = 'Y'");
            cbNomor.removeAllItems();
            while(rs.next()){
                cbNomor.addItem(rs.getString("kamar_nomor"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }//GEN-LAST:event_cbKamarItemStateChanged

    private void btnSimpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimpanMouseClicked
        tambahPasien();
    }//GEN-LAST:event_btnSimpanMouseClicked

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnExitMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard_page().setVisible(true);
            }
        });
    }
    
    private void setColor(JPanel pane)
    {
        pane.setBackground(new Color(41,57,80));
    }
    
    private void resetColor(JPanel [] pane, JPanel [] indicators)
    {
        for(int i=0;i<pane.length;i++){
           pane[i].setBackground(new Color(23,35,51));
           
        } for(int i=0;i<indicators.length;i++){
           indicators[i].setOpaque(false);           
        }
        
    }
    
    private void tableQuery(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Pasien> pasien = new ArrayList<Pasien>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from pasien, dokter where pasien.dokter_id=dokter.dokter_id and pasien_tipe not like 'igd'");
            while(rs.next()){
                Pasien ps = new Pasien();
                ps.setPasien_ktp(rs.getString("pasien_ktp"));
                ps.setNama(rs.getString("pasien_nama"));
                ps.setUmur(rs.getInt("pasien_umur"));
                ps.setAlamat(rs.getString("pasien_alamat"));
                ps.setKamar_nomor(rs.getInt("kamar_nomor"));
                ps.setDokter_nama(rs.getString("dokter_nama"));
                pasien.add(ps);
            }
            PasienTableModel tablemodel = new PasienTableModel(pasien);
            pasienTable.setModel(tablemodel);
            JTableHeader theader = pasienTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
        lbl_totalpasien.setText("Total Pasien : "+String.valueOf(pasienTable.getRowCount()));
    }
    
    private void tableSearch(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Pasien> pasien = new ArrayList<Pasien>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from pasien, dokter where pasien.dokter_id=dokter.dokter_id and pasien.pasien_nama like '%"+text_caripasien.getText().toString()+"%' and pasien_tipe not like 'igd'");
            while(rs.next()){
                Pasien ps = new Pasien();
                ps.setPasien_ktp(rs.getString("pasien_ktp"));
                ps.setNama(rs.getString("pasien_nama"));
                ps.setUmur(rs.getInt("pasien_umur"));
                ps.setAlamat(rs.getString("pasien_alamat"));
                ps.setKamar_nomor(rs.getInt("kamar_nomor"));
                ps.setDokter_nama(rs.getString("dokter_nama"));
                pasien.add(ps);
            }
            PasienTableModel tablemodel = new PasienTableModel(pasien) {};
            pasienTable.setModel(tablemodel);
            JTableHeader theader = pasienTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
        lbl_totalpasien.setText("Total Pasien : "+String.valueOf(pasienTable.getRowCount()));
    }
    
    private void igdQuery(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Pasien> pasien = new ArrayList<Pasien>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from pasien where pasien_tipe = 'igd'");
            while(rs.next()){
                Pasien ps = new Pasien();
                ps.setPasien_ktp(rs.getString("pasien_ktp"));
                ps.setNama(rs.getString("pasien_nama"));
                ps.setUmur(rs.getInt("pasien_umur"));
                ps.setAlamat(rs.getString("pasien_alamat"));
                pasien.add(ps);
            }
            IgdTableModel tablemodel = new IgdTableModel(pasien);
            igdTable.setModel(tablemodel);
            JTableHeader theader = igdTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
        lbl_totalpasien1.setText("Total Pasien : "+String.valueOf(igdTable.getRowCount()));
    }
    
    private void igdSearch(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Pasien> pasien = new ArrayList<Pasien>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from pasien where pasien_nama like '%"+text_cariigd.getText().toString()+"%' and pasien_tipe = 'igd'");
            while(rs.next()){
                Pasien ps = new Pasien();
                ps.setPasien_ktp(rs.getString("pasien_ktp"));
                ps.setNama(rs.getString("pasien_nama"));
                ps.setUmur(rs.getInt("pasien_umur"));
                ps.setAlamat(rs.getString("pasien_alamat"));
                pasien.add(ps);
            }
            IgdTableModel tablemodel = new IgdTableModel(pasien) {};
            igdTable.setModel(tablemodel);
            JTableHeader theader = igdTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
        lbl_totalpasien1.setText("Total Pasien : "+String.valueOf(igdTable.getRowCount()));
    }
    
    private void kamarQuery(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Kamar> kamar = new ArrayList<Kamar>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from kamar, kelas_kamar where kelas_kamar.kelas_id=kamar.kelas_id");
            while(rs.next()){
                Kamar km = new Kamar();
                km.setNomor(rs.getInt("kamar_nomor"));
                km.setKelas(rs.getString("kelas_nama"));
                km.setKetersediaan(rs.getString("kamar_ketersediaan"));
                kamar.add(km);
            }
            KamarTableModel tablemodel = new KamarTableModel(kamar) {};
            kamarTable.setModel(tablemodel);
            JTableHeader theader = igdTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }
    
    private void fillCombo(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from kelas_kamar");
            while(rs.next()){
                cbKelas.addItem(rs.getString("kelas_nama"));
                cbKamar.addItem(rs.getString("kelas_nama"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from spesialis");
            while(rs.next()){
                cbSpesialis.addItem(rs.getString("spesialis_nama"));
                cbSpesialisreg.addItem(rs.getString("spesialis_nama"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }
    
    private void kamarSort(){
        String sedia = null;
        if(cbUrut.getSelectedItem() == "Tersedia"){
            sedia = "Y";
        }else if(cbUrut.getSelectedItem() == "Terisi"){
            sedia = "T";
        }else if(cbUrut.getSelectedItem() == "Semua"){
            sedia = "%";
        }
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Kamar> kamar = new ArrayList<Kamar>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from kamar, kelas_kamar where kelas_kamar.kelas_id=kamar.kelas_id and kamar.kamar_ketersediaan like '"+sedia+"'");
            while(rs.next()){
                Kamar km = new Kamar();
                km.setNomor(rs.getInt("kamar_nomor"));
                km.setKelas(rs.getString("kelas_nama"));
                km.setKetersediaan(rs.getString("kamar_ketersediaan"));
                kamar.add(km);
            }
            KamarTableModel tablemodel = new KamarTableModel(kamar) {};
            kamarTable.setModel(tablemodel);
            JTableHeader theader = igdTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }
    
    private void kamarKelas(){
        String kelas = null;
        if(cbKelas.getSelectedIndex() == 1){
            kelas = "1";
        }else if(cbKelas.getSelectedIndex() == 2){
            kelas = "2";
        }else if(cbKelas.getSelectedIndex() == 3){
            kelas = "3";
        }else if(cbKelas.getSelectedIndex() == 0){
            kelas = "%";
        }
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Kamar> kamar = new ArrayList<Kamar>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from kamar, kelas_kamar where kelas_kamar.kelas_id=kamar.kelas_id and kelas_kamar.kelas_id like '"+kelas+"'");
            while(rs.next()){
                Kamar km = new Kamar();
                km.setNomor(rs.getInt("kamar_nomor"));
                km.setKelas(rs.getString("kelas_nama"));
                km.setKetersediaan(rs.getString("kamar_ketersediaan"));
                kamar.add(km);
            }
            KamarTableModel tablemodel = new KamarTableModel(kamar) {};
            kamarTable.setModel(tablemodel);
            JTableHeader theader = igdTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }
    
    private void dokterQuery(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Dokter> dokter = new ArrayList<Dokter>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from dokter, spesialis where dokter.spesialis_id=spesialis.spesialis_id");
            while(rs.next()){
                Dokter dkt = new Dokter();
                dkt.setDokter_id(rs.getInt("dokter_id"));
                dkt.setNama(rs.getString("dokter_nama"));
                dkt.setUmur(rs.getInt("dokter_umur"));
                dkt.setAlamat(rs.getString("dokter_alamat"));
                dkt.setSpesialis(rs.getString("spesialis_nama"));
                dokter.add(dkt);
            }
            DokterTableModel tablemodel = new DokterTableModel(dokter) {};
            dokterTable.setModel(tablemodel);
            JTableHeader theader = igdTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }
    
    private void dokterSort(){
        String sp = null;
        switch (cbSpesialis.getSelectedIndex()) {
            case 0:
                sp = "%";
                break;
            case 1:
                sp = "1";
                break;
            case 2:
                sp = "2";
                break;
            case 3:
                sp = "3";
                break;
            case 4:
                sp = "4";
                break;
            case 5:
                sp = "5";
                break;
            case 6:
                sp = "6";
                break;    
            default:
                break;
        }
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        List<Dokter> dokter = new ArrayList<Dokter>();
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from dokter, spesialis where dokter.spesialis_id=spesialis.spesialis_id and dokter.spesialis_id like '"+sp+"'");
            while(rs.next()){
                Dokter dkt = new Dokter();
                dkt.setDokter_id(rs.getInt("dokter_id"));
                dkt.setNama(rs.getString("dokter_nama"));
                dkt.setUmur(rs.getInt("dokter_umur"));
                dkt.setAlamat(rs.getString("dokter_alamat"));
                dkt.setSpesialis(rs.getString("spesialis_nama"));
                dokter.add(dkt);
            }
            DokterTableModel tablemodel = new DokterTableModel(dokter) {};
            dokterTable.setModel(tablemodel);
            JTableHeader theader = igdTable.getTableHeader();
            theader.setOpaque(false);
            theader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        conMan.logOff();
    }
    
    private void tambahPasien(){
        ConnectionManager conMan = new ConnectionManager();
        Connection conn = conMan.logOn();
        
        String ktp, nama, alamat, umur, nomor, pasien_tipe;
        int dokter_id;
        ktp = txtKtp.getText().toString();
        nama = txtNama.getText().toString();
        alamat = txtAlamat.getText().toString();
        umur = txtUmur.getText().toString();
        nomor = cbNomor.getSelectedItem().toString();
        dokter_id = idDokter;
        pasien_tipe = cbTipe.getSelectedItem().toString();
        String query = null, query2 = null;
        if(cbTipe.getSelectedItem() == "Inap"){
            query = "insert into pasien (pasien_ktp,pasien_nama,pasien_umur,pasien_alamat,kamar_nomor,dokter_id,pasien_tipe) "+
                    "value('"+ktp+"','"+nama+"',"+umur+",'"+alamat+"',"+nomor+","+dokter_id+",'"+pasien_tipe+"')";
            query2 = "Update kamar set kamar_ketersediaan = 'T' where kamar_nomor="+nomor;
        }else if(cbTipe.getSelectedItem() == "Jalan"){
            query = "insert into pasien (pasien_ktp,pasien_nama,pasien_umur,pasien_alamat,kamar_nomor,dokter_id,pasien_tipe) "+
                    "value('"+ktp+"','"+nama+"',"+umur+",'"+alamat+"',NULL,"+dokter_id+",'"+pasien_tipe+"')";
        }if(cbTipe.getSelectedItem() == "IGD"){
            query = "insert into pasien (pasien_ktp,pasien_nama,pasien_umur,pasien_alamat,kamar_nomor,dokter_id,pasien_tipe) "+
                    "value('"+ktp+"','"+nama+"',"+umur+",'"+alamat+"',NULL,NULL,'"+pasien_tipe+"')";
        }
        try {
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.executeUpdate();
            if(cbTipe.getSelectedItem() == "Inap"){
                PreparedStatement stmt1 = conn.prepareStatement(query2);
                stmt1.executeUpdate();
            }
            JOptionPane.showMessageDialog(this, "Data pasien berhasil ditambahkan!");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this, "Gagal!");
        }
        conMan.logOff();
        
        txtKtp.setText("");
        txtNama.setText("");
        txtAlamat.setText("");
        txtUmur.setText("");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnExit;
    private javax.swing.JPanel btnSimpan;
    private javax.swing.JPanel btn_dokter;
    private javax.swing.JPanel btn_igd;
    private javax.swing.JPanel btn_kamar;
    private javax.swing.JPanel btn_pasien;
    private javax.swing.JPanel btn_reg;
    private javax.swing.JPanel card_panel;
    private javax.swing.JComboBox<String> cbDokter;
    private javax.swing.JComboBox<String> cbKamar;
    private javax.swing.JComboBox<String> cbKelas;
    private javax.swing.JComboBox<String> cbNomor;
    private javax.swing.JComboBox<String> cbSpesialis;
    private javax.swing.JComboBox<String> cbSpesialisreg;
    private javax.swing.JComboBox<String> cbTipe;
    private javax.swing.JComboBox<String> cbUrut;
    private javax.swing.JPanel dokterPanel;
    private javax.swing.JTable dokterTable;
    private javax.swing.JPanel igdPanel;
    private javax.swing.JTable igdTable;
    private javax.swing.JPanel ind_dokter;
    private javax.swing.JPanel ind_igd;
    private javax.swing.JPanel ind_kamar;
    private javax.swing.JPanel ind_pasien;
    private javax.swing.JPanel ind_reg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel kamarPanel;
    private javax.swing.JTable kamarTable;
    private javax.swing.JLabel lblDokter;
    private javax.swing.JLabel lblKamar;
    private javax.swing.JLabel lblNomor;
    private javax.swing.JLabel lblSpesialis;
    private javax.swing.JLabel lbl_totalpasien;
    private javax.swing.JLabel lbl_totalpasien1;
    private javax.swing.JLabel lbl_totalpasien2;
    private javax.swing.JPanel pasienPanel;
    private javax.swing.JTable pasienTable;
    private javax.swing.JPanel regPanel;
    private javax.swing.JTextField text_cariigd;
    private javax.swing.JTextField text_caripasien;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtKtp;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtUmur;
    // End of variables declaration//GEN-END:variables
}
